#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

# Create unique temp files (BSD/Linux portable)
tmp_old=$(mktemp /tmp/unspace_old.XXXXXX)       || exit 1
tmp_new=$(mktemp /tmp/unspace_new.XXXXXX)       || exit 1
tmp_mvs=$(mktemp /tmp/unspace_mvs.XXXXXX.sh)    || exit 1

# Ensure cleanup on EXIT or interrupt
trap 'rm -f "$tmp_old" "$tmp_new" "$tmp_mvs"' EXIT

capture_filenames() {
    echo "Capturing filenames with problematic characters..."
    find . -depth \
        | sed 's|^\./||' \
        | grep -E "[ _\-\[\]\(\),'\"]" \
        > "$tmp_old"
    echo "  found $(wc -l < "$tmp_old") entries"
}

normalize_filenames() {
    echo "Normalizing filenames..."
    perl -pe '
        s/\[[^]]*\]//g;                       # strip [bracketed] content
        s/[, _\-\[\]()'"'"'"]+/_/g;          # collapse punctuation+spaces → _
        s/_+/_/g;                             # collapse multiple underscores
        s/^_//;                               # trim leading underscore
        s/_$//;                               # trim trailing underscore
        s/_\.(?=\w+$)/./;                    # drop underscore before extension
    ' "$tmp_old" > "$tmp_new"
    echo "  sample before → after:"
    paste -d ' → ' <(head -n3 "$tmp_old") <(head -n3 "$tmp_new")
}

generate_move_commands() {
    echo "Generating move commands..."
    paste -d $'\t' "$tmp_old" "$tmp_new" \
        | awk -F '\t' '
            $1 != $2 {
                dir = gensub("/[^/]+$","","",$2)
                print "mkdir -p \"" dir "\""
                print "mv -i -- \"" $1 "\" \"" $2 "\""
            }
        ' > "$tmp_mvs"
    echo "  $(wc -l < "$tmp_mvs") commands ready"
}

execute_move_commands() {
    if [[ -s "$tmp_mvs" ]]; then
        echo "Executing move commands..."
        bash "$tmp_mvs"
    else
        echo "Nothing to rename—all filenames already clean."
    fi
}

main() {
    capture_filenames
    normalize_filenames
    generate_move_commands
    execute_move_commands
}

main

