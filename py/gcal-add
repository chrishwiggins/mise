#!/usr/bin/env python3

import sys
import webbrowser
from datetime import datetime, timedelta
from urllib.parse import quote

def create_google_calendar_url(title, when, duration, attendees, description=""):
    """Create a Google Calendar URL with pre-filled event details"""
    
    # Parse the 'when' parameter (simplified - assumes today if just time given)
    if "today" in when.lower():
        base_date = datetime.now()
        time_part = when.lower().replace("today", "").strip()
    else:
        base_date = datetime.now()
        time_part = when
    
    # Parse time (simplified - assumes PM if hour < 12 and no AM/PM specified)
    time_part = time_part.replace("pm", "").replace("am", "").strip()
    if ":" in time_part:
        hour, minute = map(int, time_part.split(":"))
    else:
        hour = int(time_part)
        minute = 0
    
    # Assume PM if hour < 8 (common for meetings)
    if hour < 8:
        hour += 12
    
    start_time = base_date.replace(hour=hour, minute=minute, second=0, microsecond=0)
    end_time = start_time + timedelta(minutes=int(duration))
    
    # Convert to UTC (rough EST/EDT conversion)
    utc_offset = 4 if start_time.month >= 3 and start_time.month <= 11 else 5
    start_utc = start_time + timedelta(hours=utc_offset)
    end_utc = end_time + timedelta(hours=utc_offset)
    
    start_str = start_utc.strftime('%Y%m%dT%H%M%SZ')
    end_str = end_utc.strftime('%Y%m%dT%H%M%SZ')
    
    # Build Google Calendar URL
    base_url = "https://calendar.google.com/calendar/render"
    params = {
        'action': 'TEMPLATE',
        'text': title,
        'dates': f"{start_str}/{end_str}",
        'details': description,
        'add': attendees,
        'trp': 'false'
    }
    
    # Build query string
    query_parts = []
    for key, value in params.items():
        if value:  # Only add non-empty values
            query_parts.append(f"{key}={quote(str(value))}")
    
    url = f"{base_url}?{'&'.join(query_parts)}"
    
    print(f"Opening Google Calendar with:")
    print(f"Title: {title}")
    print(f"Time: {start_time.strftime('%Y-%m-%d %I:%M %p')} - {end_time.strftime('%I:%M %p')} ({duration} min)")
    print(f"Attendees: {attendees}")
    if description:
        print(f"Description: {description}")
    print(f"\nURL: {url}")
    
    # Open in browser
    webbrowser.open(url)

def show_usage():
    print("""
Usage: gcal-add <title> <when> <duration_minutes> <attendees> [description]

Examples:
  gcal-add "Team Meeting" "today 2pm" 60 "alice@company.com,bob@company.com" "Weekly standup"
  gcal-add "Lunch" "today 12:30" 90 "friend@gmail.com"
  gcal-add "Seminar" "today 4pm" 30 "dh2938@columbia.edu,gjn2113@columbia.edu,mm6156@columbia.edu" "Video chat meeting"

Google Calendar URL Parameters:
  action=TEMPLATE          - Opens event creation form
  text=<title>            - Event title
  dates=<start>/<end>     - Start/end times (YYYYMMDDTHHMMSSZ format, UTC)
  details=<description>   - Event description
  add=<emails>            - Comma-separated attendee emails
  location=<venue>        - Event location
  trp=false              - Skip "add to calendar" popup

Notes:
- Times assume PM if hour < 8
- Automatically converts to UTC for Google Calendar
- Opens in default browser
- You'll need to manually add Google Meet if needed
""")

if __name__ == '__main__':
    if len(sys.argv) < 5:
        show_usage()
        sys.exit(1)
    
    title = sys.argv[1]
    when = sys.argv[2]
    duration = sys.argv[3]
    attendees = sys.argv[4]
    description = sys.argv[5] if len(sys.argv) > 5 else ""
    
    create_google_calendar_url(title, when, duration, attendees, description)